---
AWSTemplateFormatVersion: "2010-09-09"

Description: >
  This template creates the base VPC resources. Please note that there are a limit of 5 VPC's per region per AWS 
  account. Please refer to https://docs.aws.amazon.com/vpc/latest/userguide/amazon-vpc-limits.html for more 
  information regarding AWS VPC Limits. This template will also create a HTTP proxy in the public VPC for Internet 
  access. This is slightly cheaper than creating a NAT gateway stack.

# Metadata:
#   template metadata

Parameters:
  PublicVpcCidrParam:
    Type: String
    Default: "172.31.100.0/22"
  PublicVpcSubnet1CidrParam:
    Type: String
    Default: "172.31.100.0/24"
  PublicVpcSubnet2CidrParam:
    Type: String
    Default: "172.31.101.0/24"
  PublicVpcSubnet3CidrParam:
    Type: String
    Default: "172.31.102.0/24"
  PrivateVpcCidrParam:
    Type: String
    Default: "10.20.0.0/16"
  PrivateVpcSubnet1CidrParam:
    Type: String
    Default: "10.20.0.0/20"
  PrivateVpcSubnet2CidrParam:
    Type: String
    Default: "10.20.16.0/20"
  PrivateVpcSubnet3CidrParam:
    Type: String
    Default: "10.20.32.0/20"

# Rules: 
#   set of rules

# Mappings:
#   set of mappings

# Conditions:
#   set of conditions

# Transform:
#   set of transforms

Resources:

#######################################################################################################################
###                                                                                                                 ###
###                                                   PRIVATE VPC                                                   ###
###                                                                                                                 ###
#######################################################################################################################

  PrivateVpc:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref PrivateVpcCidrParam
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: "default"
      Tags: 
        - Key: "Public"
          Value: "FALSE"
        - Key: "Name"
          Value: "PrivateVpc"

  PrivateVpcSubnet1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Sub "${AWS::Region}a"
      CidrBlock: !Ref PrivateVpcSubnet1CidrParam
      VpcId: !Ref PrivateVpc
      Tags: 
      - Key: "Name"
        Value: "PrivateVpcSubnet1"

  PrivateVpcSubnet2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Sub "${AWS::Region}b"
      CidrBlock: !Ref PrivateVpcSubnet2CidrParam
      VpcId: !Ref PrivateVpc
      Tags: 
      - Key: "Name"
        Value: "PrivateVpcSubnet2"

  PrivateVpcSubnet3:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Sub "${AWS::Region}c"
      CidrBlock: !Ref PrivateVpcSubnet3CidrParam
      VpcId: !Ref PrivateVpc
      Tags: 
      - Key: "Name"
        Value: "PrivateVpcSubnet3"

  PrivateVpcRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref PrivateVpc

  PrivateVpcSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PrivateVpcRouteTable
      SubnetId: !Ref PrivateVpcSubnet1

  PrivateVpcSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PrivateVpcRouteTable
      SubnetId: !Ref PrivateVpcSubnet2

  PrivateVpcSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PrivateVpcRouteTable
      SubnetId: !Ref PrivateVpcSubnet3

#######################################################################################################################
###                                                                                                                 ###
###                                                    PUBLIC VPC                                                   ###
###                                                                                                                 ###
#######################################################################################################################

  PublicVpc:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref PublicVpcCidrParam
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: "default"
      Tags: 
        - Key: "Public"
          Value: "TRUE"
        - Key: "Name"
          Value: "PublicVpc"

  PublicVpcInternetGateway:
    Type: AWS::EC2::InternetGateway
    DependsOn: PublicVpc
    Properties:
      Tags:
      - Key: "Public"
        Value: "TRUE"

  PublicVpcInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref PublicVpcInternetGateway
      VpcId: !Ref PublicVpc

  PublicVpcSubnet1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Sub "${AWS::Region}a"
      CidrBlock: !Ref PublicVpcSubnet1CidrParam
      VpcId: !Ref PublicVpc
      MapPublicIpOnLaunch: true
      Tags: 
      - Key: "Name"
        Value: "PublicVpcSubnet1"

  PublicVpcSubnet2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Sub "${AWS::Region}b"
      CidrBlock: !Ref PublicVpcSubnet2CidrParam
      VpcId: !Ref PublicVpc
      MapPublicIpOnLaunch: true
      Tags: 
      - Key: "Name"
        Value: "PublicVpcSubnet2"

  PublicVpcSubnet3:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Sub "${AWS::Region}c"
      CidrBlock: !Ref PublicVpcSubnet3CidrParam
      VpcId: !Ref PublicVpc
      MapPublicIpOnLaunch: true
      Tags: 
      - Key: "Name"
        Value: "PublicVpcSubnet3"

  PublicVpcRouteTable:
    Type: AWS::EC2::RouteTable
    DependsOn:
    - PublicVpcInternetGatewayAttachment
    Properties: 
      VpcId: !Ref PublicVpc

  PublicVpcToInternetRoute:
    Type: AWS::EC2::Route
    DependsOn:
    - PublicVpcInternetGatewayAttachment
    Properties:
      DestinationCidrBlock: "0.0.0.0/0"
      RouteTableId: !Ref PublicVpcRouteTable
      GatewayId: !Ref PublicVpcInternetGateway
  
  PublicVpcSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn:
    - PublicVpcInternetGatewayAttachment
    Properties: 
      RouteTableId: !Ref PublicVpcRouteTable
      SubnetId: !Ref PublicVpcSubnet1

  PublicVpcSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn:
    - PublicVpcInternetGatewayAttachment
    Properties: 
      RouteTableId: !Ref PublicVpcRouteTable
      SubnetId: !Ref PublicVpcSubnet2

  PublicVpcSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn:
    - PublicVpcInternetGatewayAttachment
    Properties: 
      RouteTableId: !Ref PublicVpcRouteTable
      SubnetId: !Ref PublicVpcSubnet3

  
#######################################################################################################################
###                                                                                                                 ###
###                                                     ROUTING                                                     ###
###                                                                                                                 ###
#######################################################################################################################

  InterVpcPeeringConnection:
    Type: AWS::EC2::VPCPeeringConnection
    Properties:
      VpcId: !Ref PublicVpc
      PeerVpcId: !Ref PrivateVpc

  PublicVpcToPrivateVpcRoute:
    Type: AWS::EC2::Route
    DependsOn:
    - PublicVpc
    - PrivateVpc
    - PrivateVpcRouteTable
    Properties:
      DestinationCidrBlock: !Ref PrivateVpcCidrParam
      RouteTableId: !Ref PublicVpcRouteTable
      VpcPeeringConnectionId: !Ref InterVpcPeeringConnection

  PrivateVpcToPublicVpcRoute:
    Type: AWS::EC2::Route
    DependsOn:
    - PublicVpc
    - PrivateVpc
    - PublicVpcRouteTable
    Properties:
      DestinationCidrBlock: !Ref PublicVpcCidrParam
      RouteTableId: !Ref PrivateVpcRouteTable
      VpcPeeringConnectionId: !Ref InterVpcPeeringConnection

#######################################################################################################################
###                                                                                                                 ###
###                                                 COMMON RESOURCES                                                ###
###                                                                                                                 ###
#######################################################################################################################

  # This can be used in various Security Group rules
  InterVpcHostsPrefixList:
    Type: AWS::EC2::PrefixList
    Properties: 
      AddressFamily: "IPv4"
      Entries: 
        - Cidr: !GetAtt PublicVpc.CidrBlock
          Description: "Public VPC CIDR"
        - Cidr: !GetAtt PrivateVpc.CidrBlock
          Description: "Private VPC CIDR"
      MaxEntries: 3
      PrefixListName: "InterVpcHostsPrefixList"

Outputs:

  InterVpcHostsPrefixListId:
    Description: "InterVpcHostsPrefixList ID"
    Value: !GetAtt InterVpcHostsPrefixList.PrefixListId
    Export:
      Name: !Sub "${AWS::StackName}-InterVpcHostsPrefixListId"

  PrivateVpcId:
    Description: "PrivateVpc ID"
    Value: !Ref PrivateVpc
    Export:
      Name: !Sub "${AWS::StackName}-PrivateVpcId"

  PrivateVpcCidrBlock:
    Description: "CIDR for PrivateVpc"
    Value: !GetAtt PrivateVpc.CidrBlock
    Export:
      Name: !Sub "${AWS::StackName}-PrivateVpcCidrBlock"

  PublicVpcId:
    Description: "PublicVpc ID"
    Value: !Ref PublicVpc
    Export:
      Name: !Sub "${AWS::StackName}-PublicVpcId"

  PublicVpcCidrBlock:
    Description: "CIDR for PublicVpc"
    Value: !GetAtt PublicVpc.CidrBlock
    Export:
      Name: !Sub "${AWS::StackName}-PublicVpcCidrBlock"

  PublicVpcSubnet1Id:
    Description: "ID for PublicVpcSubnet1"
    Value: !Ref PublicVpcSubnet1
    Export:
      Name: !Sub "${AWS::StackName}-PublicVpcSubnet1Id"

  PublicVpcSubnet2Id:
    Description: "ID for PublicVpcSubnet2"
    Value: !Ref PublicVpcSubnet2
    Export:
      Name: !Sub "${AWS::StackName}-PublicVpcSubnet2Id"

  PublicVpcSubnet3Id:
    Description: "ID for PublicVpcSubnet3"
    Value: !Ref PublicVpcSubnet3
    Export:
      Name: !Sub "${AWS::StackName}-PublicVpcSubnet3Id"

  PrivateVpcSubnet1Id:
    Description: "ID for PrivateVpcSubnet1"
    Value: !Ref PrivateVpcSubnet1
    Export:
      Name: !Sub "${AWS::StackName}-PrivateVpcSubnet1Id"

  PrivateVpcSubnet2Id:
    Description: "ID for PrivateVpcSubnet2"
    Value: !Ref PrivateVpcSubnet2
    Export:
      Name: !Sub "${AWS::StackName}-PrivateVpcSubnet2Id"

  PrivateVpcSubnet3Id:
    Description: "ID for PrivateVpcSubnet3"
    Value: !Ref PrivateVpcSubnet3
    Export:
      Name: !Sub "${AWS::StackName}-PrivateVpcSubnet3Id"

  PublicVpcRouteTableId:
    Description: "ID for PublicVpcRouteTable"
    Value: !GetAtt PublicVpcRouteTable.RouteTableId
    Export:
      Name: !Sub "${AWS::StackName}-PublicVpcRouteTableId"

  PrivateVpcRouteTableId:
    Description: "ID for PrivateVpcRouteTable"
    Value: !GetAtt PrivateVpcRouteTable.RouteTableId
    Export:
      Name: !Sub "${AWS::StackName}-PrivateVpcRouteTableId"
